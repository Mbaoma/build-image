name: "Build Docker Image and Push to GHCR"
author: "@mbaoma"
description: "Abstracts pushing Docker images to GHCR"

inputs:
  github_token: 
     description: "Your secrets.GITHUB_TOKEN"
     required: true

  image_name:
    description: 'The name of the Docker image to build'
    required: true

  dockerfile-path:
    description: 'The path to the Dockerfile'
    required: true
    default: "Dockerfile"

  context:
    description: "A path to the context in which the build will happen, see https://docs.docker.com/engine/reference/commandline/build/"
    required: false
    default: "."

  registry:
    description: 'The container registry to push the image to'
    required: true
    default: "ghcr.io"
  
  registry-username:
    description: 'The username for authenticating with the container registry (defaults to the github.actor)'
    required: false

  docker_io_token:
    description: "Your docker.io token created via https://hub.docker.com/settings/security"
    required: false
  
  tags:
    description: 'The tags to assign to the Docker image'
    required: false

runs:
  using: "composite"
  steps:
    # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry
    - name: Log in to the Container registry
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        DOCKER_BUILDKIT: '1'
        DOCKER_IO_USER: ${{ inputs.registry-username }}
        DOCKER_IO_TOKEN: ${{ inputs.docker_io_token }}
        IMAGE_NAME: ${{ inputs.image_name }}
        IMAGE_TAG: ${{ inputs.tags }}

      run: |
        echo "Using $(docker -v)"

        echo "::group::Logging into the GitHub Container registry (ghcr.io) ..."
        echo "${GITHUB_TOKEN}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        echo "::endgroup::"

        echo "::group::Set commit tag and image name"
        if [ "${{ github.event_name }}" = "release" ]; then
          export COMMIT_TAG=v${{ github.event.release.tag_name }}
          export SHA="${{ github.sha }}"
          export SHORT_SHA="${SHA:0:7}"
        else
          if [ -z "${IMAGE_TAG}" ]; then
            export COMMIT_TAG="${GITHUB_REF#refs/heads/}"
            export SHA="${{ github.sha }}"
            export SHORT_SHA="${SHA:0:7}"
          fi
        fi

        # lowercase the image name, see https://github.com/macbre/push-to-ghcr/issues/12
        export IMAGE_NAME=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')

        echo "Tagging with ${COMMIT_TAG}"
        echo "Tagging with ${SHORT_SHA}"
        echo "Tagging with ${SHA}"
        echo "::endgroup::"

        export BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        export GITHUB_URL=https://github.com/${{ github.repository }}

        echo "::group::Building the Docker image: ghcr.io/${IMAGE_NAME}:${COMMIT_TAG} from ${{ inputs.dockerfile }} in ${{ inputs.context }} context ..."

        docker build \
          --file "${{ inputs.dockerfile }}" \
          --progress tty \
          --cache-from "${{ inputs.registry }}/${IMAGE_NAME}:latest" \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --build-arg BUILD_DATE="${BUILD_DATE}" \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          -t "ghcr.io/${IMAGE_NAME}:${COMMIT_TAG}" \
          -t "ghcr.io/${IMAGE_NAME}:${SHORT_SHA}" \
          -t "ghcr.io/${IMAGE_NAME}:${SHA}" \
          --label "org.label-schema.build-date=${BUILD_DATE}" \
          --label "org.label-schema.vcs-url=${GITHUB_URL}" \
          --label "org.label-schema.vcs-ref=${GITHUB_SHA}" \
          --label "org.opencontainers.image.created=${BUILD_DATE}" \
          --label "org.opencontainers.image.source=${GITHUB_URL}" \
          --label "org.opencontainers.image.revision=${GITHUB_SHA}" \
          "${{ inputs.context }}"

        echo "::endgroup::"

        echo "::group::Inspecting the image ..."
        docker image ls

        echo "Labels:"
        docker image inspect "ghcr.io/${IMAGE_NAME}:${COMMIT_TAG}" | jq '.[].Config.Labels'

        echo "Env variables:"
        docker image inspect "ghcr.io/${IMAGE_NAME}:${COMMIT_TAG}" | jq '.[].Config.Env'

        echo "::endgroup::"

        echo "::group::Pushing the Docker image to ghcr.io ..."
        docker push --all-tags "ghcr.io/${IMAGE_NAME}:${COMMIT_TAG}" && echo "Pushed"
        echo "::endgroup::"

        if [ -z "${DOCKER_IO_TOKEN}" ]; then
          echo "::notice::NOT pushing the Docker image to docker.io ... Provide 'docker_io_token' if needed."
        else
          if [ -z "${DOCKER_IO_USER}" ]; then
            export DOCKER_IO_USER="${{ github.actor }}"
          fi

          echo "::group::Pushing the Docker image to docker.io as ${DOCKER_IO_USER}..."
          echo "${DOCKER_IO_TOKEN}" | docker login docker.io -u "${DOCKER_IO_USER}" --password-stdin

          docker push --all-tags "docker.io/${IMAGE_NAME}:${COMMIT_TAG}" && echo "Pushed"

          echo "::endgroup::"
        fi




      